// Start of user code Copyright
/*******************************************************************************
 * Copyright (c) 2020 Jad El-khoury and others.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/
// End of user code

package com.sample.rm;

import java.net.URI;
import java.util.ArrayList;

import javax.ws.rs.core.UriBuilder;
import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.trs.server.InmemPagedTrs;
import org.eclipse.lyo.oslc4j.trs.server.PagedTrs;
import org.eclipse.lyo.oslc4j.trs.server.ResourceEventHandler;
import org.eclipse.lyo.oslc4j.trs.server.service.TrackedResourceSetService;
import org.glassfish.hk2.api.Factory;

// Start of user code imports
import java.util.Iterator;
import com.sample.rm.resources.Requirement;
// End of user code

// Start of user code pre_class_code
// End of user code

public class PagedTrsSingleton implements Factory<PagedTrs> {
    private static InmemPagedTrs pagedTrs;

    // Start of user code class_attributes
    // End of user code

    // Start of user code class_methods
    // End of user code

    @Override
    public PagedTrs provide() {
        return getPagedTrs();
    }

    @Override
    public void dispose(final PagedTrs instance) {
        // Start of user code dispose
        // End of user code
    }

    private static PagedTrs getPagedTrs() {
        if(pagedTrs == null) {
            // Start of user code Initialise
            // End of user code
            
            ArrayList<URI> uris = new ArrayList<URI>();
            // Start of user code initialBase
            //TODO: Provide the initial list of URIs to populate the TRS log with
            ArrayList<Requirement> requirements = RMToolManager.getRequirements();
            for (Iterator iterator = requirements.iterator(); iterator.hasNext();) {
                uris.add(((Requirement) iterator.next()).getAbout());
            }
            // End of user code

            // not thread-safe
            pagedTrs = new InmemPagedTrs(50, 50,
                UriBuilder.fromUri(OSLC4JUtils.getServletURI()).path(TrackedResourceSetService.RESOURCE_PATH).build(), 
                TrackedResourceSetService.BASE_PATH, TrackedResourceSetService.CHANGELOG_PATH, uris);
            // Start of user code finalize
            // End of user code
        }
        return pagedTrs;
    }

    public static ResourceEventHandler getResourceEventHandler() {
        getPagedTrs();
        return pagedTrs;
    }
}
